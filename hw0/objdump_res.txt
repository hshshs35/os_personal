
wc:     file format elf64-x86-64
wc
architecture: i386:x86-64, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x0000000000400560

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000400040 paddr 0x0000000000400040 align 2**3
         filesz 0x00000000000001f8 memsz 0x00000000000001f8 flags r-x
  INTERP off    0x0000000000000238 vaddr 0x0000000000400238 paddr 0x0000000000400238 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000400000 paddr 0x0000000000400000 align 2**21
         filesz 0x0000000000000974 memsz 0x0000000000000974 flags r-x
    LOAD off    0x0000000000000e10 vaddr 0x0000000000600e10 paddr 0x0000000000600e10 align 2**21
         filesz 0x0000000000000248 memsz 0x0000000000000258 flags rw-
 DYNAMIC off    0x0000000000000e28 vaddr 0x0000000000600e28 paddr 0x0000000000600e28 align 2**3
         filesz 0x00000000000001d0 memsz 0x00000000000001d0 flags rw-
    NOTE off    0x0000000000000254 vaddr 0x0000000000400254 paddr 0x0000000000400254 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x0000000000000824 vaddr 0x0000000000400824 paddr 0x0000000000400824 align 2**2
         filesz 0x000000000000003c memsz 0x000000000000003c flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000000e10 vaddr 0x0000000000600e10 paddr 0x0000000000600e10 align 2**0
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x00000000004004d0
  FINI                 0x0000000000400804
  INIT_ARRAY           0x0000000000600e10
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000600e18
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000400298
  STRTAB               0x0000000000400380
  SYMTAB               0x00000000004002c0
  STRSZ                0x000000000000005b
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000601000
  PLTRELSZ             0x0000000000000090
  PLTREL               0x0000000000000007
  JMPREL               0x0000000000400440
  RELA                 0x0000000000400410
  RELASZ               0x0000000000000030
  RELAENT              0x0000000000000018
  VERNEED              0x00000000004003f0
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000004003dc

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  0000000000400238  0000000000400238  00000238  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  0000000000400254  0000000000400254  00000254  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  0000000000400274  0000000000400274  00000274  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000024  0000000000400298  0000000000400298  00000298  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       000000c0  00000000004002c0  00000000004002c0  000002c0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000005b  0000000000400380  0000000000400380  00000380  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000010  00000000004003dc  00000000004003dc  000003dc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  00000000004003f0  00000000004003f0  000003f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     00000030  0000000000400410  0000000000400410  00000410  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000090  0000000000400440  0000000000400440  00000440  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         0000001a  00000000004004d0  00000000004004d0  000004d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000070  00000000004004f0  00000000004004f0  000004f0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .text         000002a2  0000000000400560  0000000000400560  00000560  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .fini         00000009  0000000000400804  0000000000400804  00000804  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .rodata       00000014  0000000000400810  0000000000400810  00000810  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 .eh_frame_hdr 0000003c  0000000000400824  0000000000400824  00000824  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame     00000114  0000000000400860  0000000000400860  00000860  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .init_array   00000008  0000000000600e10  0000000000600e10  00000e10  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 18 .fini_array   00000008  0000000000600e18  0000000000600e18  00000e18  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .jcr          00000008  0000000000600e20  0000000000600e20  00000e20  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000001d0  0000000000600e28  0000000000600e28  00000e28  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000008  0000000000600ff8  0000000000600ff8  00000ff8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .got.plt      00000048  0000000000601000  0000000000601000  00001000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .data         00000010  0000000000601048  0000000000601048  00001048  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 24 .bss          00000010  0000000000601058  0000000000601058  00001058  2**3
                  ALLOC
 25 .comment      00000056  0000000000000000  0000000000000000  00001058  2**0
                  CONTENTS, READONLY
 26 .debug_aranges 00000030  0000000000000000  0000000000000000  000010ae  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_info   00000376  0000000000000000  0000000000000000  000010de  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_abbrev 00000116  0000000000000000  0000000000000000  00001454  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_line   0000010c  0000000000000000  0000000000000000  0000156a  2**0
                  CONTENTS, READONLY, DEBUGGING
 30 .debug_str    00000263  0000000000000000  0000000000000000  00001676  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
0000000000400238 l    d  .interp	0000000000000000              .interp
0000000000400254 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
0000000000400274 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000400298 l    d  .gnu.hash	0000000000000000              .gnu.hash
00000000004002c0 l    d  .dynsym	0000000000000000              .dynsym
0000000000400380 l    d  .dynstr	0000000000000000              .dynstr
00000000004003dc l    d  .gnu.version	0000000000000000              .gnu.version
00000000004003f0 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000400410 l    d  .rela.dyn	0000000000000000              .rela.dyn
0000000000400440 l    d  .rela.plt	0000000000000000              .rela.plt
00000000004004d0 l    d  .init	0000000000000000              .init
00000000004004f0 l    d  .plt	0000000000000000              .plt
0000000000400560 l    d  .text	0000000000000000              .text
0000000000400804 l    d  .fini	0000000000000000              .fini
0000000000400810 l    d  .rodata	0000000000000000              .rodata
0000000000400824 l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000400860 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000600e10 l    d  .init_array	0000000000000000              .init_array
0000000000600e18 l    d  .fini_array	0000000000000000              .fini_array
0000000000600e20 l    d  .jcr	0000000000000000              .jcr
0000000000600e28 l    d  .dynamic	0000000000000000              .dynamic
0000000000600ff8 l    d  .got	0000000000000000              .got
0000000000601000 l    d  .got.plt	0000000000000000              .got.plt
0000000000601048 l    d  .data	0000000000000000              .data
0000000000601058 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000600e20 l     O .jcr	0000000000000000              __JCR_LIST__
0000000000400590 l     F .text	0000000000000000              deregister_tm_clones
00000000004005c0 l     F .text	0000000000000000              register_tm_clones
0000000000400600 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000601060 l     O .bss	0000000000000001              completed.6982
0000000000600e18 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000400620 l     F .text	0000000000000000              frame_dummy
0000000000600e10 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              wc.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
0000000000400970 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000600e20 l     O .jcr	0000000000000000              __JCR_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000600e18 l       .init_array	0000000000000000              __init_array_end
0000000000600e28 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000600e10 l       .init_array	0000000000000000              __init_array_start
0000000000601000 l     O .got.plt	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000400800 g     F .text	0000000000000002              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000601048  w      .data	0000000000000000              data_start
0000000000601058 g     O .bss	0000000000000008              stdin@@GLIBC_2.2.5
0000000000601058 g       .data	0000000000000000              _edata
0000000000000000       F *UND*	0000000000000000              fclose@@GLIBC_2.2.5
0000000000400804 g     F .fini	0000000000000000              _fini
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000601048 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000601050 g     O .data	0000000000000000              .hidden __dso_handle
0000000000400810 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000400790 g     F .text	0000000000000065              __libc_csu_init
0000000000000000       F *UND*	0000000000000000              _IO_getc@@GLIBC_2.2.5
0000000000601068 g       .bss	0000000000000000              _end
0000000000400560 g     F .text	0000000000000000              _start
0000000000601058 g       .bss	0000000000000000              __bss_start
000000000040064d g     F .text	00000000000000ee              main
0000000000000000       F *UND*	0000000000000000              fopen@@GLIBC_2.2.5
0000000000000000  w      *UND*	0000000000000000              _Jv_RegisterClasses
0000000000601058 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
000000000040073b g     F .text	0000000000000047              isValid
00000000004004d0 g     F .init	0000000000000000              _init



Disassembly of section .init:

00000000004004d0 <_init>:
  4004d0:	48 83 ec 08          	sub    $0x8,%rsp
  4004d4:	48 8b 05 1d 0b 20 00 	mov    0x200b1d(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4004db:	48 85 c0             	test   %rax,%rax
  4004de:	74 05                	je     4004e5 <_init+0x15>
  4004e0:	e8 4b 00 00 00       	callq  400530 <__gmon_start__@plt>
  4004e5:	48 83 c4 08          	add    $0x8,%rsp
  4004e9:	c3                   	retq   

Disassembly of section .plt:

00000000004004f0 <fclose@plt-0x10>:
  4004f0:	ff 35 12 0b 20 00    	pushq  0x200b12(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4004f6:	ff 25 14 0b 20 00    	jmpq   *0x200b14(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4004fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400500 <fclose@plt>:
  400500:	ff 25 12 0b 20 00    	jmpq   *0x200b12(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400506:	68 00 00 00 00       	pushq  $0x0
  40050b:	e9 e0 ff ff ff       	jmpq   4004f0 <_init+0x20>

0000000000400510 <printf@plt>:
  400510:	ff 25 0a 0b 20 00    	jmpq   *0x200b0a(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400516:	68 01 00 00 00       	pushq  $0x1
  40051b:	e9 d0 ff ff ff       	jmpq   4004f0 <_init+0x20>

0000000000400520 <__libc_start_main@plt>:
  400520:	ff 25 02 0b 20 00    	jmpq   *0x200b02(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400526:	68 02 00 00 00       	pushq  $0x2
  40052b:	e9 c0 ff ff ff       	jmpq   4004f0 <_init+0x20>

0000000000400530 <__gmon_start__@plt>:
  400530:	ff 25 fa 0a 20 00    	jmpq   *0x200afa(%rip)        # 601030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400536:	68 03 00 00 00       	pushq  $0x3
  40053b:	e9 b0 ff ff ff       	jmpq   4004f0 <_init+0x20>

0000000000400540 <_IO_getc@plt>:
  400540:	ff 25 f2 0a 20 00    	jmpq   *0x200af2(%rip)        # 601038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400546:	68 04 00 00 00       	pushq  $0x4
  40054b:	e9 a0 ff ff ff       	jmpq   4004f0 <_init+0x20>

0000000000400550 <fopen@plt>:
  400550:	ff 25 ea 0a 20 00    	jmpq   *0x200aea(%rip)        # 601040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400556:	68 05 00 00 00       	pushq  $0x5
  40055b:	e9 90 ff ff ff       	jmpq   4004f0 <_init+0x20>

Disassembly of section .text:

0000000000400560 <_start>:
  400560:	31 ed                	xor    %ebp,%ebp
  400562:	49 89 d1             	mov    %rdx,%r9
  400565:	5e                   	pop    %rsi
  400566:	48 89 e2             	mov    %rsp,%rdx
  400569:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40056d:	50                   	push   %rax
  40056e:	54                   	push   %rsp
  40056f:	49 c7 c0 00 08 40 00 	mov    $0x400800,%r8
  400576:	48 c7 c1 90 07 40 00 	mov    $0x400790,%rcx
  40057d:	48 c7 c7 4d 06 40 00 	mov    $0x40064d,%rdi
  400584:	e8 97 ff ff ff       	callq  400520 <__libc_start_main@plt>
  400589:	f4                   	hlt    
  40058a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400590 <deregister_tm_clones>:
  400590:	b8 5f 10 60 00       	mov    $0x60105f,%eax
  400595:	55                   	push   %rbp
  400596:	48 2d 58 10 60 00    	sub    $0x601058,%rax
  40059c:	48 83 f8 0e          	cmp    $0xe,%rax
  4005a0:	48 89 e5             	mov    %rsp,%rbp
  4005a3:	77 02                	ja     4005a7 <deregister_tm_clones+0x17>
  4005a5:	5d                   	pop    %rbp
  4005a6:	c3                   	retq   
  4005a7:	b8 00 00 00 00       	mov    $0x0,%eax
  4005ac:	48 85 c0             	test   %rax,%rax
  4005af:	74 f4                	je     4005a5 <deregister_tm_clones+0x15>
  4005b1:	5d                   	pop    %rbp
  4005b2:	bf 58 10 60 00       	mov    $0x601058,%edi
  4005b7:	ff e0                	jmpq   *%rax
  4005b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004005c0 <register_tm_clones>:
  4005c0:	b8 58 10 60 00       	mov    $0x601058,%eax
  4005c5:	55                   	push   %rbp
  4005c6:	48 2d 58 10 60 00    	sub    $0x601058,%rax
  4005cc:	48 c1 f8 03          	sar    $0x3,%rax
  4005d0:	48 89 e5             	mov    %rsp,%rbp
  4005d3:	48 89 c2             	mov    %rax,%rdx
  4005d6:	48 c1 ea 3f          	shr    $0x3f,%rdx
  4005da:	48 01 d0             	add    %rdx,%rax
  4005dd:	48 d1 f8             	sar    %rax
  4005e0:	75 02                	jne    4005e4 <register_tm_clones+0x24>
  4005e2:	5d                   	pop    %rbp
  4005e3:	c3                   	retq   
  4005e4:	ba 00 00 00 00       	mov    $0x0,%edx
  4005e9:	48 85 d2             	test   %rdx,%rdx
  4005ec:	74 f4                	je     4005e2 <register_tm_clones+0x22>
  4005ee:	5d                   	pop    %rbp
  4005ef:	48 89 c6             	mov    %rax,%rsi
  4005f2:	bf 58 10 60 00       	mov    $0x601058,%edi
  4005f7:	ff e2                	jmpq   *%rdx
  4005f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400600 <__do_global_dtors_aux>:
  400600:	80 3d 59 0a 20 00 00 	cmpb   $0x0,0x200a59(%rip)        # 601060 <completed.6982>
  400607:	75 11                	jne    40061a <__do_global_dtors_aux+0x1a>
  400609:	55                   	push   %rbp
  40060a:	48 89 e5             	mov    %rsp,%rbp
  40060d:	e8 7e ff ff ff       	callq  400590 <deregister_tm_clones>
  400612:	5d                   	pop    %rbp
  400613:	c6 05 46 0a 20 00 01 	movb   $0x1,0x200a46(%rip)        # 601060 <completed.6982>
  40061a:	f3 c3                	repz retq 
  40061c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400620 <frame_dummy>:
  400620:	48 83 3d f8 07 20 00 	cmpq   $0x0,0x2007f8(%rip)        # 600e20 <__JCR_END__>
  400627:	00 
  400628:	74 1e                	je     400648 <frame_dummy+0x28>
  40062a:	b8 00 00 00 00       	mov    $0x0,%eax
  40062f:	48 85 c0             	test   %rax,%rax
  400632:	74 14                	je     400648 <frame_dummy+0x28>
  400634:	55                   	push   %rbp
  400635:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  40063a:	48 89 e5             	mov    %rsp,%rbp
  40063d:	ff d0                	callq  *%rax
  40063f:	5d                   	pop    %rbp
  400640:	e9 7b ff ff ff       	jmpq   4005c0 <register_tm_clones>
  400645:	0f 1f 00             	nopl   (%rax)
  400648:	e9 73 ff ff ff       	jmpq   4005c0 <register_tm_clones>

000000000040064d <main>:
  40064d:	55                   	push   %rbp
  40064e:	48 89 e5             	mov    %rsp,%rbp
  400651:	48 83 ec 30          	sub    $0x30,%rsp
  400655:	89 7d dc             	mov    %edi,-0x24(%rbp)
  400658:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40065c:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
  400660:	75 0d                	jne    40066f <main+0x22>
  400662:	48 8b 05 ef 09 20 00 	mov    0x2009ef(%rip),%rax        # 601058 <__TMC_END__>
  400669:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40066d:	eb 1c                	jmp    40068b <main+0x3e>
  40066f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400673:	48 83 c0 08          	add    $0x8,%rax
  400677:	48 8b 00             	mov    (%rax),%rax
  40067a:	be 14 08 40 00       	mov    $0x400814,%esi
  40067f:	48 89 c7             	mov    %rax,%rdi
  400682:	e8 c9 fe ff ff       	callq  400550 <fopen@plt>
  400687:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40068b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)
  400692:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
  400699:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  4006a0:	eb 3c                	jmp    4006de <main+0x91>
  4006a2:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4006a5:	89 c7                	mov    %eax,%edi
  4006a7:	e8 8f 00 00 00       	callq  40073b <isValid>
  4006ac:	85 c0                	test   %eax,%eax
  4006ae:	74 09                	je     4006b9 <main+0x6c>
  4006b0:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%rbp)
  4006b7:	eb 21                	jmp    4006da <main+0x8d>
  4006b9:	83 7d f0 01          	cmpl   $0x1,-0x10(%rbp)
  4006bd:	0f 94 c0             	sete   %al
  4006c0:	0f b6 c0             	movzbl %al,%eax
  4006c3:	01 45 e8             	add    %eax,-0x18(%rbp)
  4006c6:	83 7d f4 0a          	cmpl   $0xa,-0xc(%rbp)
  4006ca:	0f 94 c0             	sete   %al
  4006cd:	0f b6 c0             	movzbl %al,%eax
  4006d0:	01 45 e4             	add    %eax,-0x1c(%rbp)
  4006d3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
  4006da:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  4006de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006e2:	48 89 c7             	mov    %rax,%rdi
  4006e5:	e8 56 fe ff ff       	callq  400540 <_IO_getc@plt>
  4006ea:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4006ed:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%rbp)
  4006f1:	75 af                	jne    4006a2 <main+0x55>
  4006f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006f7:	48 89 c7             	mov    %rax,%rdi
  4006fa:	e8 01 fe ff ff       	callq  400500 <fclose@plt>
  4006ff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400703:	48 83 c0 08          	add    $0x8,%rax
  400707:	48 8b 00             	mov    (%rax),%rax
  40070a:	48 85 c0             	test   %rax,%rax
  40070d:	74 0a                	je     400719 <main+0xcc>
  40070f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400713:	48 8b 40 08          	mov    0x8(%rax),%rax
  400717:	eb 05                	jmp    40071e <main+0xd1>
  400719:	b8 16 08 40 00       	mov    $0x400816,%eax
  40071e:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  400721:	8b 55 e8             	mov    -0x18(%rbp),%edx
  400724:	8b 75 e4             	mov    -0x1c(%rbp),%esi
  400727:	49 89 c0             	mov    %rax,%r8
  40072a:	bf 17 08 40 00       	mov    $0x400817,%edi
  40072f:	b8 00 00 00 00       	mov    $0x0,%eax
  400734:	e8 d7 fd ff ff       	callq  400510 <printf@plt>
  400739:	c9                   	leaveq 
  40073a:	c3                   	retq   

000000000040073b <isValid>:
  40073b:	55                   	push   %rbp
  40073c:	48 89 e5             	mov    %rsp,%rbp
  40073f:	89 7d fc             	mov    %edi,-0x4(%rbp)
  400742:	83 7d fc 2f          	cmpl   $0x2f,-0x4(%rbp)
  400746:	7e 0d                	jle    400755 <isValid+0x1a>
  400748:	83 7d fc 39          	cmpl   $0x39,-0x4(%rbp)
  40074c:	7f 07                	jg     400755 <isValid+0x1a>
  40074e:	b8 01 00 00 00       	mov    $0x1,%eax
  400753:	eb 2b                	jmp    400780 <isValid+0x45>
  400755:	83 7d fc 60          	cmpl   $0x60,-0x4(%rbp)
  400759:	7e 0d                	jle    400768 <isValid+0x2d>
  40075b:	83 7d fc 7a          	cmpl   $0x7a,-0x4(%rbp)
  40075f:	7f 07                	jg     400768 <isValid+0x2d>
  400761:	b8 01 00 00 00       	mov    $0x1,%eax
  400766:	eb 18                	jmp    400780 <isValid+0x45>
  400768:	83 7d fc 40          	cmpl   $0x40,-0x4(%rbp)
  40076c:	7e 0d                	jle    40077b <isValid+0x40>
  40076e:	83 7d fc 5a          	cmpl   $0x5a,-0x4(%rbp)
  400772:	7f 07                	jg     40077b <isValid+0x40>
  400774:	b8 01 00 00 00       	mov    $0x1,%eax
  400779:	eb 05                	jmp    400780 <isValid+0x45>
  40077b:	b8 00 00 00 00       	mov    $0x0,%eax
  400780:	5d                   	pop    %rbp
  400781:	c3                   	retq   
  400782:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400789:	00 00 00 
  40078c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400790 <__libc_csu_init>:
  400790:	41 57                	push   %r15
  400792:	41 89 ff             	mov    %edi,%r15d
  400795:	41 56                	push   %r14
  400797:	49 89 f6             	mov    %rsi,%r14
  40079a:	41 55                	push   %r13
  40079c:	49 89 d5             	mov    %rdx,%r13
  40079f:	41 54                	push   %r12
  4007a1:	4c 8d 25 68 06 20 00 	lea    0x200668(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  4007a8:	55                   	push   %rbp
  4007a9:	48 8d 2d 68 06 20 00 	lea    0x200668(%rip),%rbp        # 600e18 <__init_array_end>
  4007b0:	53                   	push   %rbx
  4007b1:	4c 29 e5             	sub    %r12,%rbp
  4007b4:	31 db                	xor    %ebx,%ebx
  4007b6:	48 c1 fd 03          	sar    $0x3,%rbp
  4007ba:	48 83 ec 08          	sub    $0x8,%rsp
  4007be:	e8 0d fd ff ff       	callq  4004d0 <_init>
  4007c3:	48 85 ed             	test   %rbp,%rbp
  4007c6:	74 1e                	je     4007e6 <__libc_csu_init+0x56>
  4007c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4007cf:	00 
  4007d0:	4c 89 ea             	mov    %r13,%rdx
  4007d3:	4c 89 f6             	mov    %r14,%rsi
  4007d6:	44 89 ff             	mov    %r15d,%edi
  4007d9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4007dd:	48 83 c3 01          	add    $0x1,%rbx
  4007e1:	48 39 eb             	cmp    %rbp,%rbx
  4007e4:	75 ea                	jne    4007d0 <__libc_csu_init+0x40>
  4007e6:	48 83 c4 08          	add    $0x8,%rsp
  4007ea:	5b                   	pop    %rbx
  4007eb:	5d                   	pop    %rbp
  4007ec:	41 5c                	pop    %r12
  4007ee:	41 5d                	pop    %r13
  4007f0:	41 5e                	pop    %r14
  4007f2:	41 5f                	pop    %r15
  4007f4:	c3                   	retq   
  4007f5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  4007fc:	00 00 00 00 

0000000000400800 <__libc_csu_fini>:
  400800:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400804 <_fini>:
  400804:	48 83 ec 08          	sub    $0x8,%rsp
  400808:	48 83 c4 08          	add    $0x8,%rsp
  40080c:	c3                   	retq   
